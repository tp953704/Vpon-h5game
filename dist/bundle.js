!function(n,e){if("object"==typeof exports&&"object"==typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var t=e();for(var r in t)("object"==typeof exports?exports:n)[r]=t[r]}}(self,(function(){return(()=>{"use strict";var n={227:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(15),i=t.n(r),o=t(645),a=t.n(o)()(i());a.push([n.id,'html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td,article,aside,canvas,details,embed,figure,figcaption,footer,header,hgroup,menu,nav,output,ruby,section,summary,time,mark,audio,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline}:focus{outline:0}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:before,blockquote:after,q:before,q:after{content:"";content:none}table{border-collapse:collapse;border-spacing:0}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration,input[type=search]::-webkit-search-results-button,input[type=search]::-webkit-search-results-decoration{-webkit-appearance:none;-moz-appearance:none}input[type=search]{-webkit-appearance:none;-moz-appearance:none;-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box}textarea{overflow:auto;vertical-align:top;resize:vertical}audio,canvas,video{display:inline-block;*display:inline;*zoom:1;max-width:100%}audio:not([controls]){display:none;height:0}[hidden]{display:none}html{font-size:100%;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%}a:focus{outline:thin dotted}a:active,a:hover{outline:0}img{border:0;-ms-interpolation-mode:bicubic}figure{margin:0}form{margin:0}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0;white-space:normal;*margin-left:-7px}button,input,select,textarea{font-size:100%;margin:0;vertical-align:baseline;*vertical-align:middle}button,input{line-height:normal}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer;*overflow:visible}button[disabled],html input[disabled]{cursor:default}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0;*height:13px;*width:13px}input[type=search]{-webkit-appearance:textfield;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}textarea{overflow:auto;vertical-align:top}table{border-collapse:collapse;border-spacing:0}html,button,input,select,textarea{color:#222}::-moz-selection{background:#b3d4fc;text-shadow:none}::selection{background:#b3d4fc;text-shadow:none}img{vertical-align:middle}fieldset{border:0;margin:0;padding:0}textarea{resize:vertical}.chromeframe{margin:.2em 0;background:#ccc;color:#000;padding:.2em 0}html,body{width:100%;height:100%;background-color:#f7d986;overflow:hidden}.game-wrapper{position:absolute;top:0;left:0;width:100%;box-sizing:border-box;margin:0 auto;height:calc(50vw);max-width:992px;max-height:496px;border:9px #5fa6ab solid;border-radius:10px}.game-wrapper .game-container{position:relative;width:100%;height:100%}.game-wrapper .game-container .game-top-size{height:100%}.game-wrapper .game-container .game-bottom-size{height:78%}.game-wrapper .game-container .game-item{width:100%;position:absolute;top:0;right:0;bottom:0;left:0}.game-wrapper .game-container #game-ui{z-index:1;top:22%}.game-wrapper .game-container #game-bg{z-index:0;top:0}.game-wrapper .before-container{position:absolute;z-index:3;top:0;right:0;bottom:0;left:0;background-color:#afa4c9}.game-wrapper .before-container .container__content{display:flex;flex-direction:column;justify-content:space-around;align-items:center;height:100%}.game-wrapper .before-container .container__content .content__title{font-size:30px;color:#026269;text-align:center;font-weight:bolder}.game-wrapper .before-container .container__content .content__btn{padding:10px;background-color:#aad0eb;color:#602cda;font-weight:bolder;border-radius:5px}.game-wrapper .transition-none{opacity:0;transition:all 1s}',"",{version:3,sources:["webpack://./src/assets/scss/_reset.scss","webpack://./src/assets/scss/app.scss"],names:[],mappings:"AAAA,2ZAaE,QAAA,CACD,SAAA,CACA,QAAA,CACA,cAAA,CACA,YAAA,CACA,uBAAA,CAID,OACI,SAAA,CAIJ,8EAEC,aAAA,CAGD,KACC,aAAA,CAGD,MACC,eAAA,CAGD,aACC,WAAA,CAGD,oDAEC,UAAA,CACA,YAAA,CAGD,MACC,wBAAA,CACA,gBAAA,CAGD,uMAII,uBAAA,CACA,oBAAA,CAGJ,mBACI,uBAAA,CACA,oBAAA,CACA,8BAAA,CACA,2BAAA,CACA,sBAAA,CAGJ,SACI,aAAA,CACA,kBAAA,CACA,eAAA,CAOJ,mBAGI,oBAAA,EACA,cAAA,EACA,MAAA,CACA,cAAA,CAQJ,sBACI,YAAA,CACA,QAAA,CAQJ,SACI,YAAA,CAUJ,KACI,cAAA,CACA,6BAAA,CACA,yBAAA,CAOJ,QACI,mBAAA,CAOJ,iBAEI,SAAA,CAQJ,IACI,QAAA,CACA,8BAAA,CAOJ,OACI,QAAA,CAOJ,KACI,QAAA,CAOJ,SACI,uBAAA,CACA,YAAA,CACA,0BAAA,CASJ,OACI,QAAA,CACA,SAAA,CACA,kBAAA,EACA,gBAAA,CAUJ,6BAII,cAAA,CACA,QAAA,CACA,uBAAA,EACA,qBAAA,CAQJ,aAEI,kBAAA,CAUJ,cAEI,mBAAA,CAaJ,oEAII,yBAAA,CACA,cAAA,EACA,gBAAA,CAOJ,sCAEI,cAAA,CAUJ,uCAEI,qBAAA,CACA,SAAA,EACA,WAAA,EACA,UAAA,CASJ,mBACI,4BAAA,CACA,2BAAA,CACA,8BAAA,CACA,sBAAA,CAQJ,+FAEI,uBAAA,CAOJ,iDAEI,QAAA,CACA,SAAA,CAQJ,SACI,aAAA,CACA,kBAAA,CAOJ,MACI,wBAAA,CACA,gBAAA,CAGJ,kCAKI,UAAA,CAIJ,iBACI,kBAAA,CACA,gBAAA,CAGJ,YACI,kBAAA,CACA,gBAAA,CAGJ,IACI,qBAAA,CAGJ,SACI,QAAA,CACA,QAAA,CACA,SAAA,CAGJ,SACI,eAAA,CAGJ,aACI,aAAA,CACA,eAAA,CACA,UAAA,CACA,cAAA,CCrWJ,UACI,UAAA,CACA,WAAA,CACA,wBAAA,CACA,eAAA,CAMJ,cACI,iBAAA,CACA,KAAA,CACA,MAAA,CACA,UAAA,CACA,qBAAA,CACA,aAAA,CACA,iBAAA,CACA,eAAA,CACA,gBAAA,CACA,wBAAA,CACA,kBAAA,CACA,8BACI,iBAAA,CACA,UAAA,CACA,WAAA,CACA,6CACI,WAAA,CAEJ,gDACI,UAAA,CAEJ,yCACI,UAAA,CACA,iBAAA,CACA,KAAA,CACA,OAAA,CACA,QAAA,CACA,MAAA,CAEJ,uCACI,SAAA,CACA,OAAA,CAGJ,uCACI,SAAA,CACA,KAAA,CAGR,gCACI,iBAAA,CACA,SAAA,CACA,KAAA,CACA,OAAA,CACA,QAAA,CACA,MAAA,CACA,wBAAA,CACA,oDACI,YAAA,CACA,qBAAA,CACA,4BAAA,CACA,kBAAA,CACA,WAAA,CACA,oEACI,cAAA,CACA,aAAA,CACA,iBAAA,CACA,kBAAA,CAEJ,kEAEI,YAAA,CACA,wBAAA,CACA,aAAA,CACA,kBAAA,CACA,iBAAA,CAKZ,+BACI,SAAA,CACA,iBAAA",sourcesContent:['html, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed,\r\nfigure, figcaption, footer, header, hgroup,\r\nmenu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video {\r\n  margin: 0;\r\n\tpadding: 0;\r\n\tborder: 0;\r\n\tfont-size: 100%;\r\n\tfont: inherit;\r\n\tvertical-align: baseline;\r\n}\r\n\r\n/* make sure to set some focus styles for accessibility */\r\n:focus {\r\n    outline: 0;\r\n}\r\n\r\n/* HTML5 display-role reset for older browsers */\r\narticle, aside, details, figcaption, figure,\r\nfooter, header, hgroup, menu, nav, section {\r\n\tdisplay: block;\r\n}\r\n\r\nbody {\r\n\tline-height: 1;\r\n}\r\n\r\nol, ul {\r\n\tlist-style: none;\r\n}\r\n\r\nblockquote, q {\r\n\tquotes: none;\r\n}\r\n\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n\tcontent: \'\';\r\n\tcontent: none;\r\n}\r\n\r\ntable {\r\n\tborder-collapse: collapse;\r\n\tborder-spacing: 0;\r\n}\r\n\r\ninput[type=search]::-webkit-search-cancel-button,\r\ninput[type=search]::-webkit-search-decoration,\r\ninput[type=search]::-webkit-search-results-button,\r\ninput[type=search]::-webkit-search-results-decoration {\r\n    -webkit-appearance: none;\r\n    -moz-appearance: none;\r\n}\r\n\r\ninput[type=search] {\r\n    -webkit-appearance: none;\r\n    -moz-appearance: none;\r\n    -webkit-box-sizing: content-box;\r\n    -moz-box-sizing: content-box;\r\n    box-sizing: content-box;\r\n}\r\n\r\ntextarea {\r\n    overflow: auto;\r\n    vertical-align: top;\r\n    resize: vertical;\r\n}\r\n\r\n/**\r\n * Correct `inline-block` display not defined in IE 6/7/8/9 and Firefox 3.\r\n */\r\n\r\naudio,\r\ncanvas,\r\nvideo {\r\n    display: inline-block;\r\n    *display: inline;\r\n    *zoom: 1;\r\n    max-width: 100%;\r\n}\r\n\r\n/**\r\n * Prevent modern browsers from displaying `audio` without controls.\r\n * Remove excess height in iOS 5 devices.\r\n */\r\n\r\naudio:not([controls]) {\r\n    display: none;\r\n    height: 0;\r\n}\r\n\r\n/**\r\n * Address styling not present in IE 7/8/9, Firefox 3, and Safari 4.\r\n * Known issue: no IE 6 support.\r\n */\r\n\r\n[hidden] {\r\n    display: none;\r\n}\r\n\r\n/**\r\n * 1. Correct text resizing oddly in IE 6/7 when body `font-size` is set using\r\n *    `em` units.\r\n * 2. Prevent iOS text size adjust after orientation change, without disabling\r\n *    user zoom.\r\n */\r\n\r\nhtml {\r\n    font-size: 100%; /* 1 */\r\n    -webkit-text-size-adjust: 100%; /* 2 */\r\n    -ms-text-size-adjust: 100%; /* 2 */\r\n}\r\n\r\n/**\r\n * Address `outline` inconsistency between Chrome and other browsers.\r\n */\r\n\r\na:focus {\r\n    outline: thin dotted;\r\n}\r\n\r\n/**\r\n * Improve readability when focused and also mouse hovered in all browsers.\r\n */\r\n\r\na:active,\r\na:hover {\r\n    outline: 0;\r\n}\r\n\r\n/**\r\n * 1. Remove border when inside `a` element in IE 6/7/8/9 and Firefox 3.\r\n * 2. Improve image quality when scaled in IE 7.\r\n */\r\n\r\nimg {\r\n    border: 0; /* 1 */\r\n    -ms-interpolation-mode: bicubic; /* 2 */\r\n}\r\n\r\n/**\r\n * Address margin not present in IE 6/7/8/9, Safari 5, and Opera 11.\r\n */\r\n\r\nfigure {\r\n    margin: 0;\r\n}\r\n\r\n/**\r\n * Correct margin displayed oddly in IE 6/7.\r\n */\r\n\r\nform {\r\n    margin: 0;\r\n}\r\n\r\n/**\r\n * Define consistent border, margin, and padding.\r\n */\r\n\r\nfieldset {\r\n    border: 1px solid #c0c0c0;\r\n    margin: 0 2px;\r\n    padding: 0.35em 0.625em 0.75em;\r\n}\r\n\r\n/**\r\n * 1. Correct color not being inherited in IE 6/7/8/9.\r\n * 2. Correct text not wrapping in Firefox 3.\r\n * 3. Correct alignment displayed oddly in IE 6/7.\r\n */\r\n\r\nlegend {\r\n    border: 0; /* 1 */\r\n    padding: 0;\r\n    white-space: normal; /* 2 */\r\n    *margin-left: -7px; /* 3 */\r\n}\r\n\r\n/**\r\n * 1. Correct font size not being inherited in all browsers.\r\n * 2. Address margins set differently in IE 6/7, Firefox 3+, Safari 5,\r\n *    and Chrome.\r\n * 3. Improve appearance and consistency in all browsers.\r\n */\r\n\r\nbutton,\r\ninput,\r\nselect,\r\ntextarea {\r\n    font-size: 100%; /* 1 */\r\n    margin: 0; /* 2 */\r\n    vertical-align: baseline; /* 3 */\r\n    *vertical-align: middle; /* 3 */\r\n}\r\n\r\n/**\r\n * Address Firefox 3+ setting `line-height` on `input` using `!important` in\r\n * the UA stylesheet.\r\n */\r\n\r\nbutton,\r\ninput {\r\n    line-height: normal;\r\n}\r\n\r\n/**\r\n * Address inconsistent `text-transform` inheritance for `button` and `select`.\r\n * All other form control elements do not inherit `text-transform` values.\r\n * Correct `button` style inheritance in Chrome, Safari 5+, and IE 6+.\r\n * Correct `select` style inheritance in Firefox 4+ and Opera.\r\n */\r\n\r\nbutton,\r\nselect {\r\n    text-transform: none;\r\n}\r\n\r\n/**\r\n * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`\r\n *    and `video` controls.\r\n * 2. Correct inability to style clickable `input` types in iOS.\r\n * 3. Improve usability and consistency of cursor style between image-type\r\n *    `input` and others.\r\n * 4. Remove inner spacing in IE 7 without affecting normal text inputs.\r\n *    Known issue: inner spacing remains in IE 6.\r\n */\r\n\r\nbutton,\r\nhtml input[type="button"], /* 1 */\r\ninput[type="reset"],\r\ninput[type="submit"] {\r\n    -webkit-appearance: button; /* 2 */\r\n    cursor: pointer; /* 3 */\r\n    *overflow: visible;  /* 4 */\r\n}\r\n\r\n/**\r\n * Re-set default cursor for disabled elements.\r\n */\r\n\r\nbutton[disabled],\r\nhtml input[disabled] {\r\n    cursor: default;\r\n}\r\n\r\n/**\r\n * 1. Address box sizing set to content-box in IE 8/9.\r\n * 2. Remove excess padding in IE 8/9.\r\n * 3. Remove excess padding in IE 7.\r\n *    Known issue: excess padding remains in IE 6.\r\n */\r\n\r\ninput[type="checkbox"],\r\ninput[type="radio"] {\r\n    box-sizing: border-box; /* 1 */\r\n    padding: 0; /* 2 */\r\n    *height: 13px; /* 3 */\r\n    *width: 13px; /* 3 */\r\n}\r\n\r\n/**\r\n * 1. Address `appearance` set to `searchfield` in Safari 5 and Chrome.\r\n * 2. Address `box-sizing` set to `border-box` in Safari 5 and Chrome\r\n *    (include `-moz` to future-proof).\r\n */\r\n\r\ninput[type="search"] {\r\n    -webkit-appearance: textfield; /* 1 */\r\n    -moz-box-sizing: content-box;\r\n    -webkit-box-sizing: content-box; /* 2 */\r\n    box-sizing: content-box;\r\n}\r\n\r\n/**\r\n * Remove inner padding and search cancel button in Safari 5 and Chrome\r\n * on OS X.\r\n */\r\n\r\ninput[type="search"]::-webkit-search-cancel-button,\r\ninput[type="search"]::-webkit-search-decoration {\r\n    -webkit-appearance: none;\r\n}\r\n\r\n/**\r\n * Remove inner padding and border in Firefox 3+.\r\n */\r\n\r\nbutton::-moz-focus-inner,\r\ninput::-moz-focus-inner {\r\n    border: 0;\r\n    padding: 0;\r\n}\r\n\r\n/**\r\n * 1. Remove default vertical scrollbar in IE 6/7/8/9.\r\n * 2. Improve readability and alignment in all browsers.\r\n */\r\n\r\ntextarea {\r\n    overflow: auto; /* 1 */\r\n    vertical-align: top; /* 2 */\r\n}\r\n\r\n/**\r\n * Remove most spacing between table cells.\r\n */\r\n\r\ntable {\r\n    border-collapse: collapse;\r\n    border-spacing: 0;\r\n}\r\n\r\nhtml,\r\nbutton,\r\ninput,\r\nselect,\r\ntextarea {\r\n    color: #222;\r\n}\r\n\r\n\r\n::-moz-selection {\r\n    background: #b3d4fc;\r\n    text-shadow: none;\r\n}\r\n\r\n::selection {\r\n    background: #b3d4fc;\r\n    text-shadow: none;\r\n}\r\n\r\nimg {\r\n    vertical-align: middle;\r\n}\r\n\r\nfieldset {\r\n    border: 0;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\ntextarea {\r\n    resize: vertical;\r\n}\r\n\r\n.chromeframe {\r\n    margin: 0.2em 0;\r\n    background: #ccc;\r\n    color: #000;\r\n    padding: 0.2em 0;\r\n}',"@import './reset.scss';\r\n\r\nhtml,body{\r\n    width:100%;\r\n    height: 100%;\r\n    background-color: #f7d986;\r\n    overflow: hidden;\r\n    // position: relative;\r\n}\r\n\r\n\r\n\r\n.game-wrapper{\r\n    position: absolute;\r\n    top:0;\r\n    left: 0;\r\n    width: 100%;\r\n    box-sizing: border-box;\r\n    margin: 0 auto;\r\n    height: calc(50vw);\r\n    max-width: 992px;\r\n    max-height: 496px;\r\n    border: 9px #5fa6ab solid;\r\n    border-radius: 10px;\r\n    .game-container{\r\n        position: relative;\r\n        width: 100%;\r\n        height: 100%;\r\n        .game-top-size{\r\n            height: 100%;\r\n        }\r\n        .game-bottom-size{\r\n            height: 78%;\r\n        }\r\n        .game-item{\r\n            width: 100%;\r\n            position: absolute;\r\n            top: 0;\r\n            right: 0;\r\n            bottom: 0;\r\n            left: 0;\r\n        }\r\n        #game-ui{\r\n            z-index: 1;\r\n            top:22%;\r\n            \r\n        }\r\n        #game-bg{\r\n            z-index: 0;\r\n            top:0;\r\n        }\r\n    }\r\n    .before-container{\r\n        position: absolute;\r\n        z-index: 3;\r\n        top: 0;\r\n        right: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        background-color: #afa4c9;\r\n        .container__content{\r\n            display: flex;\r\n            flex-direction: column;\r\n            justify-content: space-around;\r\n            align-items:center;\r\n            height: 100%;\r\n            .content__title{\r\n                font-size: 30px;\r\n                color: #026269;\r\n                text-align: center;\r\n                font-weight: bolder;\r\n            }\r\n            .content__btn{\r\n                \r\n                padding: 10px;\r\n                background-color: #aad0eb;\r\n                color: #602cda;\r\n                font-weight: bolder;\r\n                border-radius: 5px;\r\n            }\r\n        }\r\n    }\r\n    // 慢慢消失\r\n    .transition-none{\r\n        opacity: 0;\r\n        transition: all 1s;\r\n    }\r\n}\r\n    \r\n\r\n\r\n"],sourceRoot:""}]);const s=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t=n(e);return e[2]?"@media ".concat(e[2]," {").concat(t,"}"):t})).join("")},e.i=function(n,t,r){"string"==typeof n&&(n=[[null,n,""]]);var i={};if(r)for(var o=0;o<this.length;o++){var a=this[o][0];null!=a&&(i[a]=!0)}for(var s=0;s<n.length;s++){var A=[].concat(n[s]);r&&i[A[0]]||(t&&(A[2]?A[2]="".concat(t," and ").concat(A[2]):A[2]=t),e.push(A))}},e}},15:n=>{function e(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=new Array(e);t<e;t++)r[t]=n[t];return r}n.exports=function(n){var t,r,i=(r=4,function(n){if(Array.isArray(n))return n}(t=n)||function(n,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(n)){var t=[],r=!0,i=!1,o=void 0;try{for(var a,s=n[Symbol.iterator]();!(r=(a=s.next()).done)&&(t.push(a.value),!e||t.length!==e);r=!0);}catch(n){i=!0,o=n}finally{try{r||null==s.return||s.return()}finally{if(i)throw o}}return t}}(t,r)||function(n,t){if(n){if("string"==typeof n)return e(n,t);var r=Object.prototype.toString.call(n).slice(8,-1);return"Object"===r&&n.constructor&&(r=n.constructor.name),"Map"===r||"Set"===r?Array.from(n):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?e(n,t):void 0}}(t,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=i[1],a=i[3];if("function"==typeof btoa){var s=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),A="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(s),c="/*# ".concat(A," */"),l=a.sources.map((function(n){return"/*# sourceURL=".concat(a.sourceRoot||"").concat(n," */")}));return[o].concat(l).concat([c]).join("\n")}return[o].join("\n")}},379:(n,e,t)=>{var r,i=function(){var n={};return function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}n[e]=t}return n[e]}}(),o=[];function a(n){for(var e=-1,t=0;t<o.length;t++)if(o[t].identifier===n){e=t;break}return e}function s(n,e){for(var t={},r=[],i=0;i<n.length;i++){var s=n[i],A=e.base?s[0]+e.base:s[0],c=t[A]||0,l="".concat(A," ").concat(c);t[A]=c+1;var d=a(l),p={css:s[1],media:s[2],sourceMap:s[3]};-1!==d?(o[d].references++,o[d].updater(p)):o.push({identifier:l,updater:m(p,e),references:1}),r.push(l)}return r}function A(n){var e=document.createElement("style"),r=n.attributes||{};if(void 0===r.nonce){var o=t.nc;o&&(r.nonce=o)}if(Object.keys(r).forEach((function(n){e.setAttribute(n,r[n])})),"function"==typeof n.insert)n.insert(e);else{var a=i(n.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(e)}return e}var c,l=(c=[],function(n,e){return c[n]=e,c.filter(Boolean).join("\n")});function d(n,e,t,r){var i=t?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(n.styleSheet)n.styleSheet.cssText=l(e,i);else{var o=document.createTextNode(i),a=n.childNodes;a[e]&&n.removeChild(a[e]),a.length?n.insertBefore(o,a[e]):n.appendChild(o)}}function p(n,e,t){var r=t.css,i=t.media,o=t.sourceMap;if(i?n.setAttribute("media",i):n.removeAttribute("media"),o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),n.styleSheet)n.styleSheet.cssText=r;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(r))}}var u=null,h=0;function m(n,e){var t,r,i;if(e.singleton){var o=h++;t=u||(u=A(e)),r=d.bind(null,t,o,!1),i=d.bind(null,t,o,!0)}else t=A(e),r=p.bind(null,t,e),i=function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)};return r(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap)return;r(n=e)}else i()}}n.exports=function(n,e){(e=e||{}).singleton||"boolean"==typeof e.singleton||(e.singleton=(void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r));var t=s(n=n||[],e);return function(n){if(n=n||[],"[object Array]"===Object.prototype.toString.call(n)){for(var r=0;r<t.length;r++){var i=a(t[r]);o[i].references--}for(var A=s(n,e),c=0;c<t.length;c++){var l=a(t[c]);0===o[l].references&&(o[l].updater(),o.splice(l,1))}t=A}}}},133:(n,e,t)=>{n.exports=t.p+"assets/images/6b0e5f352c95d8a9b5ab.jpg"},219:(n,e,t)=>{n.exports=t.p+"assets/images/a907e4703c4cf4eab505.png"},130:(n,e,t)=>{n.exports=t.p+"assets/images/3c525cd610662e12bcae.png"},56:(n,e,t)=>{n.exports=t.p+"assets/images/a54e08c5b8a0768c66c7.png"},492:(n,e,t)=>{n.exports=t.p+"assets/images/7253121e4ecaf37e94a3.jpg"},737:(n,e,t)=>{n.exports=t.p+"assets/images/b51df76055b9c61eac7e.png"},303:(n,e,t)=>{n.exports=t.p+"assets/images/3d743d0a2b06ad52dc0a.png"}},e={};function t(r){var i=e[r];if(void 0!==i)return i.exports;var o=e[r]={id:r,exports:{}};return n[r](o,o.exports,t),o.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.r=n=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");r.length&&(n=r[r.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})();var r={};return(()=>{t.r(r);var n=t(379),e=t.n(n),i=t(227);e()(i.Z,{insert:"head",singleton:!1}),i.Z.locals;const o=t(492),a=t(130),s=t(133);class A{constructor(n,e,t,r,i,o,a=1){this.image="",this.imgUrl=n,this.initX=e,this.initY=t,this.width=r,this.height=i,this.canvas=o,this.mul=a}init(){const n=this,e=n.imgUrl,t=new Image(this.width);t.onload=function(){n.image=t,n.render(0)},t.src=e,n.image=t}render(n){this.image.complete&&(this.mul>1?(this.canvas.drawImage(this.image,this.initX,0,this.width,1.35*this.height,this.initX-n,this.initY,this.width,this.height),this.canvas.drawImage(this.image,this.initX,0,this.width,1.35*this.height,this.initX-n+this.width/2,this.initY,this.width,this.height),this.canvas.drawImage(this.image,this.initX,0,this.width,1.35*this.height,this.initX-n+this.width,this.initY,this.width,this.height),this.canvas.drawImage(this.image,this.initX,0,this.width,1.35*this.height,this.initX-n+3*this.width/2,this.initY,this.width,this.height)):(this.canvas.drawImage(this.image,this.initX-n,this.initY,this.width,this.height),this.canvas.drawImage(this.image,this.initX-n+this.width,this.initY,this.width,this.height),this.canvas.drawImage(this.image,this.initX-n+2*this.width,this.initY,this.width,this.height)))}}let c,l,d;function p(n){const e=document.querySelector("#"+n);if(e.getContext){const n=e.getContext("2d");return[e,n]}console.error("不支援canvas")}const[u,h]=p("game-ui"),[m,b]=p("game-bg"),g=u.width,f=u.height,C=m.width,w=m.height;const y=t(219);let x,v,I,k;const B=new Image(500);function z(n,e,t){const r=g/33.3,i=g/17,o=t%15;if(B.complete){const a=t%30+1,s=25;h.drawImage(B,r*o,0,I,k,i*(n-a/30),s+94*e,x,v)}}B.src=y,B.decode().then((()=>{x=g/20,v=f/2,I=g/34,k=f/6}));const S=t(303),E=new Image(600);function O(n,e,t){const r=g/17,i=f/4,o=g/17,a=f/6-5;if(E.complete){const s=t%30+1;h.drawImage(E,o*(n-s/30),a*e,r,i)}}E.src=S,E.decode().then((()=>{})).catch((n=>{console.log(n)}));const M=t(737),J=new Image(600);function j(n,e,t){const r=g/17,i=f/4,o=g/17,a=f/6-5;if(J.complete){const s=t%30+1;h.drawImage(J,o*(n-s/30),a*e,r,i)}}J.src=M,J.decode().then((()=>{}));const q=[[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[1,1,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[1,0,0,0,0,0],[0,0,3,0,0,0],[1,1,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,3],[0,0,2,0,0,0],[0,0,0,0,0,0],[0,0,0,2,0,0],[0,0,0,0,0,0],[0,0,1,0,0,0],[0,0,1,2,3,0],[0,0,3,0,1,0],[0,3,0,0,1,0],[0,0,0,0,2,0],[3,0,0,2,0,0],[0,0,1,0,0,0],[0,0,1,0,0,0],[3,0,1,0,0,0],[0,0,1,0,0,0],[2,0,1,0,0,3],[0,0,0,2,0,3],[0,0,1,0,0,0],[0,0,1,0,1,3],[3,0,1,0,0,0],[0,0,0,0,1,0],[0,0,0,0,1,0],[3,0,0,2,0,0],[0,0,1,0,0,0],[0,0,1,0,1,0],[0,0,1,0,0,0],[0,0,1,0,1,0],[0,0,0,0,0,0],[0,0,0,2,0,3],[0,0,0,0,0,0],[0,0,0,0,0,0],[3,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[3,0,0,2,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,2,0,0,0,0],[0,0,0,0,0,0],[3,2,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,3,0,0],[3,0,0,0,0,0],[0,2,0,2,0,0],[0,3,0,2,0,0],[2,0,0,0,0,0],[0,2,0,0,0,0],[0,0,0,3,3,3],[0,0,0,2,1,3],[0,0,0,3,2,3],[0,0,0,3,0,2],[0,0,3,0,0,2],[0,0,0,0,0,0],[0,0,0,2,0,0],[1,0,0,0,0,1],[0,1,0,0,1,0],[0,0,1,1,0,0],[0,0,1,1,0,0],[0,0,1,1,0,0],[0,1,0,1,0,0],[1,0,0,0,1,0],[0,0,0,2,0,1],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,2,1,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,1,0,0,0],[0,0,0,0,0,0],[0,0,0,0,1,0],[0,1,0,0,0,0],[0,0,0,0,0,0],[1,0,0,0,1,1],[0,0,2,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,1],[0,0,2,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,2,0,0],[0,0,0,0,0,0],[0,2,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[2,0,0,0,2,0],[0,2,0,2,0,1],[0,2,0,2,0,1],[0,2,0,2,0,1],[0,2,0,2,0,1],[0,2,0,2,0,1],[0,2,0,2,0,1],[0,2,0,2,0,1],[0,2,0,2,0,1],[0,2,0,2,0,1],[2,0,0,0,2,1],[0,0,0,0,0,1],[0,0,0,0,0,1],[0,0,0,0,0,1],[0,0,0,1,0,1],[0,0,0,1,0,1],[0,0,0,1,0,1],[0,0,0,1,0,1],[0,0,0,1,0,1],[0,0,0,1,0,0],[0,0,0,1,0,0],[0,3,0,1,2,0],[0,3,1,0,2,2],[0,3,1,0,2,0],[0,3,1,0,2,0],[0,3,1,1,2,0],[0,3,1,1,2,0],[0,3,1,1,2,0],[0,3,1,1,2,0],[0,3,1,1,2,0],[3,3,1,1,2,2],[2,3,0,0,3,2],[2,3,0,0,3,2],[2,3,0,0,3,2],[2,3,0,0,3,2],[2,3,0,0,3,2],[2,3,0,0,3,2],[2,3,0,0,3,2],[2,3,0,0,3,2],[2,3,0,0,3,2],[2,3,0,0,3,2],[2,3,0,0,3,2],[2,3,0,0,3,2]];let D,U;function R(){return[D,U,q]}function _(){return["Android","webOS","iPhone","iPad","iPod","BlackBerry","Windows Phone"].some((n=>navigator.userAgent.match(n)))}let Q=0,T=0;const G=t(56),Y=g/10,F=2.5*f,K=-.06*f;let P=1;const X=g/17,W=3*X,L=X,N=g/17.39,Z=new Image(600);function $(n){let[e,t,r]=R();const i=r.length-1,o=e+3+n;if(o==o&&o<=i){const e=r[o][P];e>1&&(on(H),T+=1),1===e&&(a=3+n,s=P,on((n=>{const e=Math.floor(2*n);let t=g/17*a,r=k*s+30,i=15+Math.floor(e%50),o=2*Math.PI/8;h.beginPath(),h.globalCompositeOperation="source-over",h.strokeStyle="yellow";for(let n=0;n<8;n++){let e=o*n;h.moveTo(t+10*Math.sin(e),r+10*Math.cos(e)),h.lineTo(t+i*Math.sin(e),r+i*Math.cos(e))}h.stroke(),n>4&&an()})),Q+=1,r[o][P]=0)}var a,s}function H(n){const e=Math.floor(n/3)%8,t=N*e,r=1/(Math.floor(n/3)%10+1);Z.complete&&(h.clearRect(W,(f/6-10)*P,Y,f/4.4),h.globalAlpha=r,h.drawImage(Z,t,K*P,L,f,W,0,Y,F)),n>30&&(h.globalAlpha=1,P=function(){let[n,e,t]=R();const r=n+3+2,i=t[n+3+1],o=t[r];let a=-1;for(let n=i.length-1;n>=0;n--){const e=i[n],t=o[n];e<=1&&t<=1&&(a=n)}return-1===a?i.findIndex((n=>{})):a}(),an())}Z.src=G,Z.decode().then((()=>{}));let V=0,nn=!0,en=0,tn=()=>{};function rn(){nn?(h.clearRect(0,0,g,f),V+=1,function(n,e,t,r){const i=r/3,o=2*r/3,a=r;t.clearRect(0,0,n,e),c.render(i%n),l.render(o%n),d.render(a%n)}(C,w,b,V),function(n){P>5?P=5:P<0&&(P=0),$(1),$(2);const e=8+Math.floor(n/3)%9,t=N*e;Z.complete&&h.drawImage(Z,t,K*P,L,f,W,0,Y,F)}(V),h.globalCompositeOperation="destination-over",function(n){const e=Math.floor(.03333333333333333*n);let t=q.length;if(!(e>t)){D=e,U=e+17>t?t:e+17;for(let e=D;e<U;e++)q[e].forEach(((t,r)=>{1===t?(h.globalCompositeOperation="source-over",z(e-D,r,n),h.globalCompositeOperation="destination-over"):2===t?O(e-D,r,n):3===t&&j(e-D,r,n)}))}}(V),h.globalCompositeOperation="source-over",h.font="bold 80px Arial",h.textBaseline="bottom",h.fillStyle="black",z(13,5.3,1),h.fillText(`x ${Q}`,5*g/6,f)):(en++,tn(en)),V<150&&(h.globalCompositeOperation="source-over",h.font="bold 30px Arial",h.textBaseline="bottom",h.fillStyle="#f3b8c8",h.fillRect(4*g/6,0,g/5,f/7),h.fillStyle="black",h.fillText("操空方式為",4*g/6,f/14),_()?h.fillText('手勢"上滑與下滑"',4*g/6,f/7):h.fillText('鍵盤的"上下左右"',4*g/6,f/7)),requestAnimationFrame(rn)}function on(n){nn=!1,tn=n}function an(){en=0,tn=()=>{},nn=!0}window.onload=()=>{_()&&function(){const n=document.documentElement.clientWidth,e=document.documentElement.clientHeight;if(n<e){const t=document.querySelector(".game-wrapper");t.style.width=e+"px",t.style.height=n+"px",t.style.top=(e-n)/2+"px",t.style.left=0-(e-n)/2+"px",t.style.transform="rotate(90deg)"}console.log(n,e);const t="onorientationchange"in window?"orientationchange":"resize";window.addEventListener(t,(function(){90===window.orientation||-90===window.orientation?(contentDOM.style.width=e+"px",contentDOM.style.height=n+"px",contentDOM.style.top="0px",contentDOM.style.left="0px",contentDOM.style.transform="none"):(contentDOM.style.width=e+"px",contentDOM.style.height=n+"px",contentDOM.style.top=(e-n)/2+"px",contentDOM.style.left=0-(e-n)/2+"px",contentDOM.style.transform="rotate(90deg)")}),!1)}();const n=document.querySelector("#startGameBtn"),e=document.querySelector(".js-beforeGame");n.addEventListener("click",(()=>{e.classList.add("transition-none"),function(n,e,t){c=new A(o,0,0,n,2*e/10,t),l=new A(a,0,1*e/20,n,2*e/10,t),d=new A(s,0,5*e/20,n,e,t,2.7),c.init(),l.init(),d.init()}(C,w,b),rn()}),!1)}})(),r})()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,