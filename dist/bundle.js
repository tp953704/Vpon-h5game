!function(n,e){if("object"==typeof exports&&"object"==typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var r=e();for(var t in r)("object"==typeof exports?exports:n)[t]=r[t]}}(self,(function(){return(()=>{"use strict";var n={227:(n,e,r)=>{r.d(e,{Z:()=>A});var t=r(15),i=r.n(t),o=r(645),a=r.n(o)()(i());a.push([n.id,'html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td,article,aside,canvas,details,embed,figure,figcaption,footer,header,hgroup,menu,nav,output,ruby,section,summary,time,mark,audio,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline}:focus{outline:0}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:before,blockquote:after,q:before,q:after{content:"";content:none}table{border-collapse:collapse;border-spacing:0}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration,input[type=search]::-webkit-search-results-button,input[type=search]::-webkit-search-results-decoration{-webkit-appearance:none;-moz-appearance:none}input[type=search]{-webkit-appearance:none;-moz-appearance:none;-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box}textarea{overflow:auto;vertical-align:top;resize:vertical}audio,canvas,video{display:inline-block;*display:inline;*zoom:1;max-width:100%}audio:not([controls]){display:none;height:0}[hidden]{display:none}html{font-size:100%;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%}a:focus{outline:thin dotted}a:active,a:hover{outline:0}img{border:0;-ms-interpolation-mode:bicubic}figure{margin:0}form{margin:0}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0;white-space:normal;*margin-left:-7px}button,input,select,textarea{font-size:100%;margin:0;vertical-align:baseline;*vertical-align:middle}button,input{line-height:normal}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer;*overflow:visible}button[disabled],html input[disabled]{cursor:default}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0;*height:13px;*width:13px}input[type=search]{-webkit-appearance:textfield;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}textarea{overflow:auto;vertical-align:top}table{border-collapse:collapse;border-spacing:0}html,button,input,select,textarea{color:#222}::-moz-selection{background:#b3d4fc;text-shadow:none}::selection{background:#b3d4fc;text-shadow:none}img{vertical-align:middle}fieldset{border:0;margin:0;padding:0}textarea{resize:vertical}.chromeframe{margin:.2em 0;background:#ccc;color:#000;padding:.2em 0}html,body{width:100%;height:100%}.app{position:fixed;display:flex;justify-content:center;align-items:center;width:100%;height:100%;background-color:#f7d986}.game-wrapper{position:relative;top:0;left:0;width:100%;box-sizing:border-box;height:calc(50vw);max-width:992px;max-height:496px;border:9px #5fa6ab solid;border-radius:10px;cursor:pointer;-webkit-tap-highlight-color:rgba(0,0,0,0)}@media(max-height: 496px)and (min-width: 992px){.game-wrapper{max-width:200vh;max-height:100vh}}@media(max-width: 50vh){.game-wrapper{max-width:80vw;max-height:40vw}}@media(max-height: 50vw){.game-wrapper{max-width:160vh;max-height:78vh}}.game-wrapper .game-container{position:relative;width:100%;height:100%}.game-wrapper .game-container .game-top-size{height:100%}.game-wrapper .game-container .game-bottom-size{height:78%}.game-wrapper .game-container .game-item{width:100%;position:absolute;top:0;right:0;bottom:0;left:0}.game-wrapper .game-container #game-ui{z-index:1;top:22%}.game-wrapper .game-container #game-bg{z-index:0;top:0}.game-wrapper .before-container{position:absolute;z-index:3;top:0;right:0;bottom:0;left:0;background-color:#afa4c9}.game-wrapper .before-container .container__content{display:flex;flex-direction:column;justify-content:space-around;align-items:center;height:100%}.game-wrapper .before-container .container__content .content__title{font-size:30px;color:#026269;text-align:center;font-weight:bolder}.game-wrapper .before-container .container__content .content__btn{padding:10px;background-color:#aad0eb;color:#602cda;font-weight:bolder;border-radius:5px}.game-wrapper .game-btn{position:absolute;z-index:4;bottom:4%;display:flex;justify-content:center;align-items:center;width:10%;height:20%;border-radius:50%;background-color:rgba(95,158,160,.43)}.game-wrapper .game-btn:active{background-color:rgba(95,158,160,.8)}.game-wrapper .game-btn .game-btn__text{font-size:calc((100vw - 320px)/60 + 20px);font-weight:bolder;color:rgba(96,44,218,.29)}.game-wrapper .top-btn{right:18%}.game-wrapper .bottom-btn{right:4%}.game-wrapper .transition-none{opacity:0;transition:all 1s}.game-wrapper .transition-none .content__btn{display:none}',"",{version:3,sources:["webpack://./src/assets/scss/_reset.scss","webpack://./src/assets/scss/app.scss"],names:[],mappings:"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",sourcesContent:['html, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed,\r\nfigure, figcaption, footer, header, hgroup,\r\nmenu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video {\r\n  margin: 0;\r\n\tpadding: 0;\r\n\tborder: 0;\r\n\tfont-size: 100%;\r\n\tfont: inherit;\r\n\tvertical-align: baseline;\r\n}\r\n\r\n/* make sure to set some focus styles for accessibility */\r\n:focus {\r\n    outline: 0;\r\n}\r\n\r\n/* HTML5 display-role reset for older browsers */\r\narticle, aside, details, figcaption, figure,\r\nfooter, header, hgroup, menu, nav, section {\r\n\tdisplay: block;\r\n}\r\n\r\nbody {\r\n\tline-height: 1;\r\n}\r\n\r\nol, ul {\r\n\tlist-style: none;\r\n}\r\n\r\nblockquote, q {\r\n\tquotes: none;\r\n}\r\n\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n\tcontent: \'\';\r\n\tcontent: none;\r\n}\r\n\r\ntable {\r\n\tborder-collapse: collapse;\r\n\tborder-spacing: 0;\r\n}\r\n\r\ninput[type=search]::-webkit-search-cancel-button,\r\ninput[type=search]::-webkit-search-decoration,\r\ninput[type=search]::-webkit-search-results-button,\r\ninput[type=search]::-webkit-search-results-decoration {\r\n    -webkit-appearance: none;\r\n    -moz-appearance: none;\r\n}\r\n\r\ninput[type=search] {\r\n    -webkit-appearance: none;\r\n    -moz-appearance: none;\r\n    -webkit-box-sizing: content-box;\r\n    -moz-box-sizing: content-box;\r\n    box-sizing: content-box;\r\n}\r\n\r\ntextarea {\r\n    overflow: auto;\r\n    vertical-align: top;\r\n    resize: vertical;\r\n}\r\n\r\n/**\r\n * Correct `inline-block` display not defined in IE 6/7/8/9 and Firefox 3.\r\n */\r\n\r\naudio,\r\ncanvas,\r\nvideo {\r\n    display: inline-block;\r\n    *display: inline;\r\n    *zoom: 1;\r\n    max-width: 100%;\r\n}\r\n\r\n/**\r\n * Prevent modern browsers from displaying `audio` without controls.\r\n * Remove excess height in iOS 5 devices.\r\n */\r\n\r\naudio:not([controls]) {\r\n    display: none;\r\n    height: 0;\r\n}\r\n\r\n/**\r\n * Address styling not present in IE 7/8/9, Firefox 3, and Safari 4.\r\n * Known issue: no IE 6 support.\r\n */\r\n\r\n[hidden] {\r\n    display: none;\r\n}\r\n\r\n/**\r\n * 1. Correct text resizing oddly in IE 6/7 when body `font-size` is set using\r\n *    `em` units.\r\n * 2. Prevent iOS text size adjust after orientation change, without disabling\r\n *    user zoom.\r\n */\r\n\r\nhtml {\r\n    font-size: 100%; /* 1 */\r\n    -webkit-text-size-adjust: 100%; /* 2 */\r\n    -ms-text-size-adjust: 100%; /* 2 */\r\n}\r\n\r\n/**\r\n * Address `outline` inconsistency between Chrome and other browsers.\r\n */\r\n\r\na:focus {\r\n    outline: thin dotted;\r\n}\r\n\r\n/**\r\n * Improve readability when focused and also mouse hovered in all browsers.\r\n */\r\n\r\na:active,\r\na:hover {\r\n    outline: 0;\r\n}\r\n\r\n/**\r\n * 1. Remove border when inside `a` element in IE 6/7/8/9 and Firefox 3.\r\n * 2. Improve image quality when scaled in IE 7.\r\n */\r\n\r\nimg {\r\n    border: 0; /* 1 */\r\n    -ms-interpolation-mode: bicubic; /* 2 */\r\n}\r\n\r\n/**\r\n * Address margin not present in IE 6/7/8/9, Safari 5, and Opera 11.\r\n */\r\n\r\nfigure {\r\n    margin: 0;\r\n}\r\n\r\n/**\r\n * Correct margin displayed oddly in IE 6/7.\r\n */\r\n\r\nform {\r\n    margin: 0;\r\n}\r\n\r\n/**\r\n * Define consistent border, margin, and padding.\r\n */\r\n\r\nfieldset {\r\n    border: 1px solid #c0c0c0;\r\n    margin: 0 2px;\r\n    padding: 0.35em 0.625em 0.75em;\r\n}\r\n\r\n/**\r\n * 1. Correct color not being inherited in IE 6/7/8/9.\r\n * 2. Correct text not wrapping in Firefox 3.\r\n * 3. Correct alignment displayed oddly in IE 6/7.\r\n */\r\n\r\nlegend {\r\n    border: 0; /* 1 */\r\n    padding: 0;\r\n    white-space: normal; /* 2 */\r\n    *margin-left: -7px; /* 3 */\r\n}\r\n\r\n/**\r\n * 1. Correct font size not being inherited in all browsers.\r\n * 2. Address margins set differently in IE 6/7, Firefox 3+, Safari 5,\r\n *    and Chrome.\r\n * 3. Improve appearance and consistency in all browsers.\r\n */\r\n\r\nbutton,\r\ninput,\r\nselect,\r\ntextarea {\r\n    font-size: 100%; /* 1 */\r\n    margin: 0; /* 2 */\r\n    vertical-align: baseline; /* 3 */\r\n    *vertical-align: middle; /* 3 */\r\n}\r\n\r\n/**\r\n * Address Firefox 3+ setting `line-height` on `input` using `!important` in\r\n * the UA stylesheet.\r\n */\r\n\r\nbutton,\r\ninput {\r\n    line-height: normal;\r\n}\r\n\r\n/**\r\n * Address inconsistent `text-transform` inheritance for `button` and `select`.\r\n * All other form control elements do not inherit `text-transform` values.\r\n * Correct `button` style inheritance in Chrome, Safari 5+, and IE 6+.\r\n * Correct `select` style inheritance in Firefox 4+ and Opera.\r\n */\r\n\r\nbutton,\r\nselect {\r\n    text-transform: none;\r\n}\r\n\r\n/**\r\n * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`\r\n *    and `video` controls.\r\n * 2. Correct inability to style clickable `input` types in iOS.\r\n * 3. Improve usability and consistency of cursor style between image-type\r\n *    `input` and others.\r\n * 4. Remove inner spacing in IE 7 without affecting normal text inputs.\r\n *    Known issue: inner spacing remains in IE 6.\r\n */\r\n\r\nbutton,\r\nhtml input[type="button"], /* 1 */\r\ninput[type="reset"],\r\ninput[type="submit"] {\r\n    -webkit-appearance: button; /* 2 */\r\n    cursor: pointer; /* 3 */\r\n    *overflow: visible;  /* 4 */\r\n}\r\n\r\n/**\r\n * Re-set default cursor for disabled elements.\r\n */\r\n\r\nbutton[disabled],\r\nhtml input[disabled] {\r\n    cursor: default;\r\n}\r\n\r\n/**\r\n * 1. Address box sizing set to content-box in IE 8/9.\r\n * 2. Remove excess padding in IE 8/9.\r\n * 3. Remove excess padding in IE 7.\r\n *    Known issue: excess padding remains in IE 6.\r\n */\r\n\r\ninput[type="checkbox"],\r\ninput[type="radio"] {\r\n    box-sizing: border-box; /* 1 */\r\n    padding: 0; /* 2 */\r\n    *height: 13px; /* 3 */\r\n    *width: 13px; /* 3 */\r\n}\r\n\r\n/**\r\n * 1. Address `appearance` set to `searchfield` in Safari 5 and Chrome.\r\n * 2. Address `box-sizing` set to `border-box` in Safari 5 and Chrome\r\n *    (include `-moz` to future-proof).\r\n */\r\n\r\ninput[type="search"] {\r\n    -webkit-appearance: textfield; /* 1 */\r\n    -moz-box-sizing: content-box;\r\n    -webkit-box-sizing: content-box; /* 2 */\r\n    box-sizing: content-box;\r\n}\r\n\r\n/**\r\n * Remove inner padding and search cancel button in Safari 5 and Chrome\r\n * on OS X.\r\n */\r\n\r\ninput[type="search"]::-webkit-search-cancel-button,\r\ninput[type="search"]::-webkit-search-decoration {\r\n    -webkit-appearance: none;\r\n}\r\n\r\n/**\r\n * Remove inner padding and border in Firefox 3+.\r\n */\r\n\r\nbutton::-moz-focus-inner,\r\ninput::-moz-focus-inner {\r\n    border: 0;\r\n    padding: 0;\r\n}\r\n\r\n/**\r\n * 1. Remove default vertical scrollbar in IE 6/7/8/9.\r\n * 2. Improve readability and alignment in all browsers.\r\n */\r\n\r\ntextarea {\r\n    overflow: auto; /* 1 */\r\n    vertical-align: top; /* 2 */\r\n}\r\n\r\n/**\r\n * Remove most spacing between table cells.\r\n */\r\n\r\ntable {\r\n    border-collapse: collapse;\r\n    border-spacing: 0;\r\n}\r\n\r\nhtml,\r\nbutton,\r\ninput,\r\nselect,\r\ntextarea {\r\n    color: #222;\r\n}\r\n\r\n\r\n::-moz-selection {\r\n    background: #b3d4fc;\r\n    text-shadow: none;\r\n}\r\n\r\n::selection {\r\n    background: #b3d4fc;\r\n    text-shadow: none;\r\n}\r\n\r\nimg {\r\n    vertical-align: middle;\r\n}\r\n\r\nfieldset {\r\n    border: 0;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\ntextarea {\r\n    resize: vertical;\r\n}\r\n\r\n.chromeframe {\r\n    margin: 0.2em 0;\r\n    background: #ccc;\r\n    color: #000;\r\n    padding: 0.2em 0;\r\n}',"@import './reset.scss';\r\n\r\nhtml,body{\r\n    width:100%;\r\n    height: 100%;\r\n    // overflow: hidden;\r\n}\r\n\r\n.app{\r\n    position: fixed;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width:100%;\r\n    height: 100%;\r\n    background-color: #f7d986;\r\n}\r\n\r\n.game-wrapper{\r\n    position: relative;\r\n    top:0;\r\n    left: 0;\r\n    width: 100%;\r\n    box-sizing: border-box;\r\n    height: calc(50vw);\r\n    max-width: 992px;\r\n    max-height: 496px;\r\n    border: 9px #5fa6ab solid;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    // 螢幕會閃\r\n    -webkit-tap-highlight-color:rgba(0,0,0,0);\r\n    @media(max-height:496px)and(min-width:992px){\r\n        max-width: 200vh;\r\n        max-height: 100vh;\r\n    }\r\n    @media(max-width:50vh){\r\n        max-width: 80vw;\r\n        max-height: 40vw;\r\n    }\r\n    @media(max-height:50vw){\r\n        max-width: 160vh;\r\n        max-height: 78vh;\r\n    }\r\n    .game-container{\r\n        position: relative;\r\n        width: 100%;\r\n        height: 100%;\r\n        .game-top-size{\r\n            height: 100%;\r\n        }\r\n        .game-bottom-size{\r\n            height: 78%;\r\n        }\r\n        .game-item{\r\n            width: 100%;\r\n            position: absolute;\r\n            top: 0;\r\n            right: 0;\r\n            bottom: 0;\r\n            left: 0;\r\n        }\r\n        #game-ui{\r\n            z-index: 1;\r\n            top:22%;\r\n        }\r\n        #game-bg{\r\n            z-index: 0;\r\n            top:0;\r\n        }\r\n    }\r\n    .before-container{\r\n        position: absolute;\r\n        z-index: 3;\r\n        top: 0;\r\n        right: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        background-color: #afa4c9;\r\n        .container__content{\r\n            display: flex;\r\n            flex-direction: column;\r\n            justify-content: space-around;\r\n            align-items:center;\r\n            height: 100%;\r\n            .content__title{\r\n                font-size: 30px;\r\n                color: #026269;\r\n                text-align: center;\r\n                font-weight: bolder;\r\n            }\r\n            .content__btn{\r\n                \r\n                padding: 10px;\r\n                background-color: #aad0eb;\r\n                color: #602cda;\r\n                font-weight: bolder;\r\n                border-radius: 5px;\r\n            }\r\n        }\r\n    }\r\n    .game-btn{\r\n        position: absolute;\r\n        z-index: 4;\r\n        bottom: 4%;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        width: 10%;\r\n        height: 20%;\r\n        border-radius: 50%;\r\n        background-color: rgb(95,158,160,0.43);\r\n        &:active{\r\n            background-color: rgb(95,158,160,0.8);\r\n        }\r\n        .game-btn__text{\r\n            //螢幕 320 字體 20px 1200 字體 80\r\n            font-size: calc((100vw - 320px)/60 + 20px);\r\n            font-weight: bolder;\r\n            color: rgb(96,44,218,29%);\r\n        }\r\n    }\r\n    .top-btn{\r\n        right: 18%;\r\n    }\r\n    .bottom-btn{\r\n        right: 4%;\r\n    }\r\n    // 慢慢消失\r\n    .transition-none{\r\n        opacity: 0;\r\n        transition: all 1s;\r\n        .content__btn{\r\n            display: none;\r\n        }\r\n    }\r\n}\r\n    \r\n\r\n\r\n"],sourceRoot:""}]);const A=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var r=n(e);return e[2]?"@media ".concat(e[2]," {").concat(r,"}"):r})).join("")},e.i=function(n,r,t){"string"==typeof n&&(n=[[null,n,""]]);var i={};if(t)for(var o=0;o<this.length;o++){var a=this[o][0];null!=a&&(i[a]=!0)}for(var A=0;A<n.length;A++){var s=[].concat(n[A]);t&&i[s[0]]||(r&&(s[2]?s[2]="".concat(r," and ").concat(s[2]):s[2]=r),e.push(s))}},e}},15:n=>{function e(n,e){(null==e||e>n.length)&&(e=n.length);for(var r=0,t=new Array(e);r<e;r++)t[r]=n[r];return t}n.exports=function(n){var r,t,i=(t=4,function(n){if(Array.isArray(n))return n}(r=n)||function(n,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(n)){var r=[],t=!0,i=!1,o=void 0;try{for(var a,A=n[Symbol.iterator]();!(t=(a=A.next()).done)&&(r.push(a.value),!e||r.length!==e);t=!0);}catch(n){i=!0,o=n}finally{try{t||null==A.return||A.return()}finally{if(i)throw o}}return r}}(r,t)||function(n,r){if(n){if("string"==typeof n)return e(n,r);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?e(n,r):void 0}}(r,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=i[1],a=i[3];if("function"==typeof btoa){var A=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),s="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(A),c="/*# ".concat(s," */"),l=a.sources.map((function(n){return"/*# sourceURL=".concat(a.sourceRoot||"").concat(n," */")}));return[o].concat(l).concat([c]).join("\n")}return[o].join("\n")}},379:(n,e,r)=>{var t,i=function(){var n={};return function(e){if(void 0===n[e]){var r=document.querySelector(e);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(n){r=null}n[e]=r}return n[e]}}(),o=[];function a(n){for(var e=-1,r=0;r<o.length;r++)if(o[r].identifier===n){e=r;break}return e}function A(n,e){for(var r={},t=[],i=0;i<n.length;i++){var A=n[i],s=e.base?A[0]+e.base:A[0],c=r[s]||0,l="".concat(s," ").concat(c);r[s]=c+1;var d=a(l),u={css:A[1],media:A[2],sourceMap:A[3]};-1!==d?(o[d].references++,o[d].updater(u)):o.push({identifier:l,updater:m(u,e),references:1}),t.push(l)}return t}function s(n){var e=document.createElement("style"),t=n.attributes||{};if(void 0===t.nonce){var o=r.nc;o&&(t.nonce=o)}if(Object.keys(t).forEach((function(n){e.setAttribute(n,t[n])})),"function"==typeof n.insert)n.insert(e);else{var a=i(n.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(e)}return e}var c,l=(c=[],function(n,e){return c[n]=e,c.filter(Boolean).join("\n")});function d(n,e,r,t){var i=r?"":t.media?"@media ".concat(t.media," {").concat(t.css,"}"):t.css;if(n.styleSheet)n.styleSheet.cssText=l(e,i);else{var o=document.createTextNode(i),a=n.childNodes;a[e]&&n.removeChild(a[e]),a.length?n.insertBefore(o,a[e]):n.appendChild(o)}}function u(n,e,r){var t=r.css,i=r.media,o=r.sourceMap;if(i?n.setAttribute("media",i):n.removeAttribute("media"),o&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),n.styleSheet)n.styleSheet.cssText=t;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(t))}}var p=null,h=0;function m(n,e){var r,t,i;if(e.singleton){var o=h++;r=p||(p=s(e)),t=d.bind(null,r,o,!1),i=d.bind(null,r,o,!0)}else r=s(e),t=u.bind(null,r,e),i=function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(r)};return t(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap)return;t(n=e)}else i()}}n.exports=function(n,e){(e=e||{}).singleton||"boolean"==typeof e.singleton||(e.singleton=(void 0===t&&(t=Boolean(window&&document&&document.all&&!window.atob)),t));var r=A(n=n||[],e);return function(n){if(n=n||[],"[object Array]"===Object.prototype.toString.call(n)){for(var t=0;t<r.length;t++){var i=a(r[t]);o[i].references--}for(var s=A(n,e),c=0;c<r.length;c++){var l=a(r[c]);0===o[l].references&&(o[l].updater(),o.splice(l,1))}r=s}}}},133:(n,e,r)=>{n.exports=r.p+"assets/images/6b0e5f352c95d8a9b5ab.jpg"},219:(n,e,r)=>{n.exports=r.p+"assets/images/a907e4703c4cf4eab505.png"},130:(n,e,r)=>{n.exports=r.p+"assets/images/3c525cd610662e12bcae.png"},56:(n,e,r)=>{n.exports=r.p+"assets/images/a54e08c5b8a0768c66c7.png"},492:(n,e,r)=>{n.exports=r.p+"assets/images/7253121e4ecaf37e94a3.jpg"},737:(n,e,r)=>{n.exports=r.p+"assets/images/b51df76055b9c61eac7e.png"},303:(n,e,r)=>{n.exports=r.p+"assets/images/3d743d0a2b06ad52dc0a.png"}},e={};function r(t){var i=e[t];if(void 0!==i)return i.exports;var o=e[t]={id:t,exports:{}};return n[t](o,o.exports,r),o.exports}r.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return r.d(e,{a:e}),e},r.d=(n,e)=>{for(var t in e)r.o(e,t)&&!r.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},r.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),r.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),r.r=n=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},(()=>{var n;r.g.importScripts&&(n=r.g.location+"");var e=r.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var t=e.getElementsByTagName("script");t.length&&(n=t[t.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),r.p=n})();var t={};return(()=>{r.r(t);var n=r(379),e=r.n(n),i=r(227);function o(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}function a(n,e){for(var r=0;r<e.length;r++){var t=e[r];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}e()(i.Z,{insert:"head",singleton:!1}),i.Z.locals;var A,s,c,l=r(492),d=r(130),u=r(133),p=function(){function n(e,r,t,i,a,A){var s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1;o(this,n),this.image="",this.imgUrl=e,this.initX=r,this.initY=t,this.width=i,this.height=a,this.canvas=A,this.mul=s}var e,r;return e=n,(r=[{key:"init",value:function(){var n=this,e=n.imgUrl,r=new Image(this.width);r.onload=function(){n.image=r,n.render(0)},r.src=e,n.image=r}},{key:"render",value:function(n){this.image.complete&&(this.mul>1?(this.canvas.drawImage(this.image,this.initX,0,this.width,1.35*this.height,this.initX-n,this.initY,this.width,this.height),this.canvas.drawImage(this.image,this.initX,0,this.width,1.35*this.height,this.initX-n+this.width/2,this.initY,this.width,this.height),this.canvas.drawImage(this.image,this.initX,0,this.width,1.35*this.height,this.initX-n+this.width,this.initY,this.width,this.height),this.canvas.drawImage(this.image,this.initX,0,this.width,1.35*this.height,this.initX-n+3*this.width/2,this.initY,this.width,this.height)):(this.canvas.drawImage(this.image,this.initX-n,this.initY,this.width,this.height),this.canvas.drawImage(this.image,this.initX-n+this.width,this.initY,this.width,this.height),this.canvas.drawImage(this.image,this.initX-n+2*this.width,this.initY,this.width,this.height)))}}])&&a(e.prototype,r),n}();function h(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var r=n&&("undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"]);if(null!=r){var t,i,o=[],a=!0,A=!1;try{for(r=r.call(n);!(a=(t=r.next()).done)&&(o.push(t.value),!e||o.length!==e);a=!0);}catch(n){A=!0,i=n}finally{try{a||null==r.return||r.return()}finally{if(A)throw i}}return o}}(n,e)||function(n,e){if(n){if("string"==typeof n)return m(n,e);var r=Object.prototype.toString.call(n).slice(8,-1);return"Object"===r&&n.constructor&&(r=n.constructor.name),"Map"===r||"Set"===r?Array.from(n):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?m(n,e):void 0}}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function m(n,e){(null==e||e>n.length)&&(e=n.length);for(var r=0,t=new Array(e);r<e;r++)t[r]=n[r];return t}function g(n){var e=document.querySelector("#"+n);if(e.getContext){var r=e.getContext("2d");return[e,r]}console.error("不支援canvas")}var b=h(g("game-ui"),2),f=b[0],C=b[1],v=h(g("game-bg"),2),w=v[0],y=v[1],x=f.width,I=f.height,k=w.width,B=w.height;var S,z,E,J,j=r(219),O=new Image(500);function M(n,e,r){var t=x/33.3,i=x/17,o=r%15;if(O.complete){var a=r%(1/G)+1;C.drawImage(O,t*o,0,E,J,i*(n-a/30),25+94*e,S,z)}}O.src=j,O.decode().then((function(){S=x/20,z=I/2,E=x/34,J=I/6}));var q=r(303),T=new Image(600);T.src=q,T.decode().then((function(){})).catch((function(n){console.log(n)}));var _=r(737),U=new Image(600);U.src=_,U.decode().then((function(){}));var R,Q,G=1/30,Y=[[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[1,1,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[1,0,0,0,0,0],[0,0,3,0,0,0],[1,1,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,3],[0,0,2,0,0,0],[0,0,0,0,0,0],[0,0,0,2,0,0],[0,0,0,0,0,0],[0,0,1,0,0,0],[0,0,1,2,3,0],[0,0,3,0,1,0],[0,3,0,0,1,0],[0,0,0,0,2,0],[3,0,0,2,0,0],[0,0,1,0,0,0],[0,0,1,0,0,0],[3,0,1,0,0,0],[0,0,1,0,0,0],[2,0,1,0,0,3],[0,0,0,2,0,3],[0,0,1,0,0,0],[0,0,1,0,1,3],[3,0,1,0,0,0],[0,0,0,0,1,0],[0,0,0,0,1,0],[3,0,0,2,0,0],[0,0,1,0,0,0],[0,0,1,0,1,0],[0,0,1,0,0,0],[0,0,1,0,1,0],[0,0,0,0,0,0],[0,0,0,2,0,3],[0,0,0,0,0,0],[0,0,0,0,0,0],[3,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[3,0,0,2,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,2,0,0,0,0],[0,0,0,0,0,0],[3,2,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,3,0,0],[3,0,0,0,0,0],[0,2,0,2,0,0],[0,3,0,2,0,0],[2,0,0,0,0,0],[0,2,0,0,0,0],[0,0,0,3,3,3],[0,0,0,2,1,3],[0,0,0,3,2,3],[0,0,0,3,0,2],[0,0,3,0,0,2],[0,0,0,0,0,0],[0,0,0,2,0,0],[1,0,0,0,0,1],[0,1,0,0,1,0],[0,0,1,1,0,0],[0,0,1,1,0,0],[0,0,1,1,0,0],[0,1,0,1,0,0],[1,0,0,0,1,0],[0,0,0,2,0,1],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,2,1,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,1,0,0,0],[0,0,0,0,0,0],[0,0,0,0,1,0],[0,1,0,0,0,0],[0,0,0,0,0,0],[1,0,0,0,1,1],[0,0,2,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,1],[0,0,2,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,2,0,0],[0,0,0,0,0,0],[0,2,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[2,0,0,0,2,0],[0,2,0,2,0,1],[0,2,0,2,0,1],[0,2,0,2,0,1],[0,2,0,2,0,1],[0,2,0,2,0,1],[0,2,0,2,0,1],[0,2,0,2,0,1],[0,2,0,2,0,1],[0,2,0,2,0,1],[2,0,0,0,2,1],[0,0,0,0,0,1],[0,0,0,0,0,1],[0,0,0,0,0,1],[0,0,0,1,0,1],[0,0,0,1,0,1],[0,0,0,1,0,1],[0,0,0,1,0,1],[0,0,0,1,0,1],[0,0,0,1,0,0],[0,0,0,1,0,0],[0,3,0,1,2,0],[0,3,1,0,2,2],[0,3,1,0,2,0],[0,3,1,0,2,0],[0,3,1,1,2,0],[0,3,1,1,2,0],[0,3,1,1,2,0],[0,3,1,1,2,0],[0,3,1,1,2,0],[3,3,1,1,2,2],[2,3,0,0,3,2],[2,3,0,0,3,2],[2,3,0,0,3,2],[2,3,0,0,3,2],[2,3,0,0,3,2],[2,3,0,0,3,2],[2,3,0,0,3,2],[2,3,0,0,3,2],[2,3,0,0,3,2],[2,3,0,0,3,2],[2,3,0,0,3,2],[2,3,0,0,3,2]];function D(){return[R,Q,Y]}function P(){return["Android","webOS","iPhone","iPad","iPod","macos","BlackBerry","Windows Phone"].some((function(n){return navigator.userAgent.match(n)}))||navigator.platform.match("MacIntel")}var F=document.querySelector(".js-moveTopBtn"),K=document.querySelector(".js-moveBottomBtn");var X=document.querySelector("#dieMedia");X.pause();var L=document.querySelector("#mailMedia"),W=0,N=0;function $(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var r=n&&("undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"]);if(null!=r){var t,i,o=[],a=!0,A=!1;try{for(r=r.call(n);!(a=(t=r.next()).done)&&(o.push(t.value),!e||o.length!==e);a=!0);}catch(n){A=!0,i=n}finally{try{a||null==r.return||r.return()}finally{if(A)throw i}}return o}}(n,e)||function(n,e){if(n){if("string"==typeof n)return Z(n,e);var r=Object.prototype.toString.call(n).slice(8,-1);return"Object"===r&&n.constructor&&(r=n.constructor.name),"Map"===r||"Set"===r?Array.from(n):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Z(n,e):void 0}}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Z(n,e){(null==e||e>n.length)&&(e=n.length);for(var r=0,t=new Array(e);r<e;r++)t[r]=n[r];return t}var H=r(56),V=x/10,nn=2.5*I,en=2,rn=x/17,tn=3*rn,on=rn,an=x/17.39,An=new Image(600);function sn(n){var e,r,t=$(D(),3),i=t[0],o=(t[1],t[2]),a=o.length-1,A=i+3+n;if(A==A&&A<=a){var s=o[A][en];s>1&&(X.currentTime=0,X.play(),wn(pn),N+=1),1===s&&(L.currentTime=0,L.play(),e=3+n,r=en,wn((function(n){var t=Math.floor(2*n),i=x/17*e,o=J*r+30,a=15+Math.floor(t%50),A=2*Math.PI/8;C.beginPath(),C.globalCompositeOperation="source-over",C.strokeStyle="yellow";for(var s=0;s<8;s++){var c=A*s;C.moveTo(i+10*Math.sin(c),o+10*Math.cos(c)),C.lineTo(i+a*Math.sin(c),o+a*Math.cos(c))}C.stroke(),n>4&&yn()})),W+=1,o[A][en]=0)}}function cn(n,e){var r=$(D(),3),t=r[0],i=(r[1],r[2]),o=t+n;return o>=i.length||i[o]&&i[o][e]<=1}function ln(n){en>5?en=5:en<0&&(en=0),sn(1),sn(2);var e=8+Math.floor(n/3)%9,r=an*e;An.complete&&C.drawImage(An,r,0,on,I,tn,(I/6-10)*en,V,nn)}function dn(){xn()&&cn(4,en-1)&&cn(3,en-1)&&(en-=1)}function un(){xn()&&cn(4,en+1)&&cn(3,en+1)&&(en+=1)}function pn(n){var e=Math.floor(n/3)%8,r=an*e,t=1/(Math.floor(n/3)%10+1);An.complete&&(C.clearRect(tn,(I/6-10)*en,V,I/4.4),C.globalAlpha=t,C.drawImage(An,r,0,on,I,tn,(I/6-10)*en,V,nn)),n>30&&(C.globalAlpha=1,en=function(){for(var n=$(D(),3),e=n[0],r=(n[1],n[2]),t=e+3+2,i=r[e+3+1],o=r[t],a=-1,A=i.length-1;A>=0;A--){var s=i[A],c=o[A];s<=1&&c<=1&&(a=A)}return-1===a?i.findIndex((function(n){})):a}(),yn())}function hn(n){var e=Math.floor(n/3)%8,r=an*e;An.complete&&(C.clearRect(tn,(I/6-10)*en,V,I/4.4),C.drawImage(An,r,0,on,I,tn,(I/6-10)*en,V,nn)),n>50&&(C.globalCompositeOperation="source-over",C.font="bold 60px Arial",C.textBaseline="bottom",C.fillStyle="black",C.clearRect(0,0,x,I),C.fillText("拿到信件 x".concat(W),2*x/6,3*I/10),C.fillText("復活次數 x".concat(N),2*x/6,5*I/10),C.font="bold 30px Arial",C.fillText("Click me and replay",2*x/6,7*I/10),ln(99),function(){var n=document.querySelector(".js-game-touch");n.addEventListener("click",(function e(){N=0,W=0,mn=0,yn(),n.removeEventListener("click",e,!1)}),!1)}())}An.src=H,An.decode().then((function(){}));var mn=0,gn=!0,bn=0,fn=function(){},Cn=Y.length;function vn(){gn?(C.clearRect(0,0,x,I),function(n,e,r,t){var i=t/3,o=2*t/3,a=t;r.clearRect(0,0,n,e),A.render(i%n),s.render(o%n),c.render(a%n)}(k,B,y,mn+=2),ln(mn),C.globalCompositeOperation="destination-over",function(n){var e=Math.floor(n*G),r=Y.length;if(!(e>r)){Q=e+17>r?r:e+17;for(var t=function(e){Y[e].forEach((function(r,t){1===r?(C.globalCompositeOperation="source-over",M(e-R,t,n),C.globalCompositeOperation="destination-over"):2===r?function(n,e,r){var t=x/17,i=I/4,o=x/17,a=I/6-5;if(T.complete){var A=r%(1/G)+1;C.drawImage(T,o*(n-A/30),a*e,t,i)}}(e-R,t,n):3===r&&function(n,e,r){var t=x/17,i=I/4,o=x/17,a=I/6-5;if(U.complete){var A=r%(1/G)+1;C.drawImage(U,o*(n-A/30),a*e,t,i)}}(e-R,t,n)}))},i=R=e;i<Q;i++)t(i)}}(mn),C.globalCompositeOperation="source-over",C.font="bold 80px Arial",C.textBaseline="bottom",C.fillStyle="black",M(1,5.3,1),C.fillText("x".concat(W),1*x/8,I)):(bn++,fn(bn)),mn<150&&(C.globalCompositeOperation="source-over",C.font="bold 50px Arial",C.textBaseline="bottom",C.textAlign="left",C.fillStyle="#f3b8c8",C.fillRect(29*x/60,0,x/3,I/3),C.fillStyle="black",C.fillText("操空方式為",3*x/6,I/7),P()?C.fillText("A鍵往上B鍵往下",3*x/6,2*I/7):C.fillText('鍵盤的"上下鍵"',3*x/6,2*I/7)),mn>Cn/G&&wn(hn),requestAnimationFrame(vn)}function wn(n){gn=!1,fn=n}function yn(){bn=0,fn=function(){},gn=!0}function xn(){return gn}P()?(F.addEventListener("click",(function(){dn()}),!1),K.addEventListener("click",(function(){un()}),!1)):(F.remove(),K.remove(),document.onkeyup=function(n){38===n.keyCode&&dn(),40===n.keyCode&&un()}),window.onload=function(){P();var n=document.querySelector("#startGameBtn"),e=document.querySelector(".js-beforeGame");n.addEventListener("click",(function(){e.classList.add("transition-none"),function(n,e,r){A=new p(l,0,0,n,2*e/10,r),s=new p(d,0,1*e/20,n,2*e/10,r),c=new p(u,0,5*e/20,n,e,r,2.7),A.init(),s.init(),c.init()}(k,B,y),vn()}),!1)}})(),t})()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,